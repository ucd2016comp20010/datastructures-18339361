package com.company;

import java.util.Deque;

public class LinkedDeque<E> implements Deque<E> {
    SinglyLinkedList<E> list;

    public LinkedDeque() {
        list = new SinglyLinkedList<E>();
    }

    @Override
    public int size() {
        return list.size();
    }

    @Override
    public boolean isEmpty() {
        return list.isEmpty();
    }

    @Override
    public E first() {
        if (list.size() == 0) {
            return null;
        }
        return list.get(0);
    }

    @Override
    public E last() {
        if (list.size() == 0) {
            return null;
        }
        return list.get(list.size() - 1);
    }

    @Override
    public void addFirst(E e) {
        list.addFirst(e);
    }

    @Override
    public void addLast(E e) {
        list.addLast(e);
    }

    @Override
    public E removeFirst() {
        return list.removeFirst();
    }

    @Override
    public E removeLast() {
        return list.removeLast();
    }
}
